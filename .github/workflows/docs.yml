name: Build Docs and Deploy to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 # Upgrade to latest LTS version
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build publish-confluence
        run: npm run build

      - name: Build documentation diagrams
        run: |
          cd docs
          npm ci
          npm run build:diagram
          cd ..      - name: Run dry-run on docs directory
      - name: Run dry-run on docs directory
        run: |
          mkdir -p docs-output
          node ./dist/cli.js publish --dry-run docs-output ./docs
          node ./dist/cli.js publish --dry-run docs-output ./docs

      - name: Update index.html with docs link
        run: |
          cp index.html index.html.bak
          # Consider using a Node.js script or tool like `cheerio` for robust HTML manipulation
            sed -i '/<li><a href="#cta">Get Started<\/a><\/li>/a \                <li><a href="docs-output/index.html">Documentation</a></li>' index.html
        
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare site directory
        run: |
          mkdir -p _site
          cp -r docs-output/* _site/
          cp -r index.html *.css *.js _site/ 2>/dev/null || :

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4